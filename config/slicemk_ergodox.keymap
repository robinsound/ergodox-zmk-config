#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        rgresc: rgrave_escape {
            compatible = "zmk,behavior-mod-morph";
            label = "RGRAVE_ESCAPE";
            #binding-cells = <0>;
            bindings = <&kp ESC>, <&kp GRAVE>;
            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT|MOD_LALT|MOD_RALT)>;
        };
		rupslash: rup_slash {
            compatible = "zmk,behavior-mod-morph";
            label = "RUP_SLASH";
            #binding-cells = <0>;
            bindings = <&kp UP>, <&kp SLASH>;
            mods = <(MOD_LGUI|MOD_RGUI|MOD_RSFT|MOD_LALT|MOD_RALT)>;
        };
    };					

	keymap {
		compatible = "zmk,keymap";
		layer_0 {
			bindings = <
				&bootloader
				&rgresc    &kp NUM_1 &kp NUM_2 &kp NUM_3 &kp NUM_4 &kp NUM_5 &kp NUM_6  &kp NUM_7 &kp NUM_8 &kp NUM_9 &kp NUM_0 &kp MINUS &kp EQUAL &kp BACKSPACE
				&kp TAB    &kp Q     &kp W     &kp E     &kp R     &kp T     &kp LBKT   &kp RBKT  &kp Y     &kp U     &kp I     &kp O     &kp P     &kp BSLH
				&kp CAPS   &kp A     &kp S     &kp D     &kp F     &kp G                          &kp H     &kp J     &kp K     &kp L     &kp SCLN  &kp ENTER
				&kp LSHIFT &kp Z     &kp X     &kp C     &kp V     &kp B     &kp SLASH  &kp SQT   &kp N     &kp M     &kp CMMA  &kp DOT   &rupslash &kp RSHFT
				&mo 1      &mo 2     &kp LCTL  &kp LALT  &kp LGUI                                           &kp RGUI  &kp RALT  &kp LEFT  &kp DOWN  &kp RIGHT
				                                                   &kp C_PP  &kp C_MUTE &kp HOME  &kp END
				                                         &kp SPC   &kp INS   &kp M_VOLU &kp PGUP  &kp RCTRL &kp SPC
				                                                             &kp M_VOLD &kp PGDN
			>;
		};
		layer_1 {
			bindings = <
				&bootloader
				&kp GRAVE &kp F1 &kp F2   &kp F3   &kp F4   &kp F5     &kp F6       &kp F7   &kp F8    &kp F9   &kp F10  &kp F11  &kp F12   &kp DEL
				&kp TAB   &none  &none    &none    &none    &none      &kp C_PP     &none    &none     &none    &none    &none    &none     &m_ff150dc7
				&kp CAPS  &none  &none    &none    &none    &none                            &none     &none    &none    &none    &none     &none
				&none     &none  &none    &none    &none    &none      &kp C_MUTE   &none    &kp TILDE &none    &none    &none    &kp SLASH &none
				&mo 1     &mo 2  &kp LCTL &kp LALT &kp LGUI                                            &kp RGUI &kp RALT &kp LEFT &kp DOWN  &kp RIGHT
				                                            &kp C_PREV &kp C_NEXT   &kp HOME &kp END
				                                   &none    &none      &kp C_BRI_UP &kp PGUP &none     &none
				                                                       &kp C_BRI_DN &kp PGDN
			>;
		};
		layer_2 {
			bindings = <
				&bootloader
				&kp TILDE &none &none &none &none &none      &none      &none &none &kp NUM_7 &kp NUM_8 &kp NUM_9 &kp KP_DIVIDE   &none
				&none     &none &none &none &none &none      &none      &none &none &kp NUM_4 &kp NUM_5 &kp NUM_6 &kp KP_MULTIPLY &m_dd962c2c
				&none     &none &none &none &none &none                       &none &kp NUM_1 &kp NUM_2 &kp NUM_3 &kp MINUS       &none
				&none     &none &none &none &none &none      &none      &none &none &kp NUM_0 &kp DOT   &kp EQUAL &kp PLUS        &none
				&mo 1     &mo 2 &none &none &none                                   &none     &none     &none     &none           &none
				                                  &kp C_PREV &kp C_NEXT &none &none
				                            &none &none      &none      &none &none &none
				                                             &none      &none
			>;
		};
	};

};
